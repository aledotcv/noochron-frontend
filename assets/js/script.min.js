async function getNotes(){try{let e=localStorage.getItem("sessionId"),t=localStorage.getItem("userId"),o="https://enabled-elephant-presently.ngrok-free.app/notes";const n=await fetch(o,{method:"GET",headers:{"ngrok-skip-browser-warning":"true","x-session-id":e,"x-user-id":t}});if(n.ok){const e=await n.json();console.log("Notes:",e),populateNotes(e)}else{const e=await n.text();alert(`Ocurrio un error al obtener las notas: ${e}`)}}catch(e){console.error("Error:",e),alert("Ocurrio un error al obtener las notas.")}}function populateNotes(e){const t=document.querySelector(".container .row");t.innerHTML="",0!==e.length?e.forEach((e=>{const o=document.createElement("div");o.className="col",o.innerHTML=`\n            <div class="card" data-note-id="${e.noteId}">\n                <div class="card-body p-4">\n                    <div class="row">\n                        <div class="col">\n                            <h4>${e.title}</h4>\n                            <p>${new Date(e.noteCreationDate).toLocaleDateString()}</p>\n                        </div>\n                        <div class="col">\n                            ${e.tags.split(",").map((e=>`<p style="width: 146px;background: #3e68ff;border-radius: 11px;color: var(--bs-body-bg);text-align: center;">${e}</p>`)).join("")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,o.querySelector(".card").addEventListener("click",(()=>openNoteModal(e))),t.appendChild(o)})):t.innerHTML="<p>No has creado notas.</p>"}function openNoteModal(e){const t=document.getElementById("noteModal");t.querySelector("#noteTitle").value=e.title,t.querySelector("#noteContent").value=e.content,t.querySelector("#noteTags").value=e.tags,t.querySelector("#noteId").value=e.noteId,t.style.display="block"}function closeModal(){document.getElementById("noteModal").style.display="none"}async function getNotes(){try{let e=localStorage.getItem("sessionId"),t=localStorage.getItem("userId"),o="https://enabled-elephant-presently.ngrok-free.app/notes";const n=await fetch(o,{method:"GET",headers:{"ngrok-skip-browser-warning":"true","x-session-id":e,"x-user-id":t}});if(n.ok){const e=await n.json();console.log("Notes:",e)}else{const e=await n.text();alert(`Ocurrio un error al obtener las notas: ${e}`)}}catch(e){console.error("Error:",e),alert("Ocurrio un error al obtener las notas.")}}document.addEventListener("DOMContentLoaded",(async()=>{await getNotes()})),document.getElementById("saveNote").addEventListener("click",(async()=>{const e=document.getElementById("noteId").value,t=document.getElementById("noteTitle").value,o=document.getElementById("noteContent").value,n=document.getElementById("noteTags").value,a=localStorage.getItem("sessionId"),r=localStorage.getItem("userId");try{const s=await fetch(`https://enabled-elephant-presently.ngrok-free.app/notes/${e}`,{method:"PUT",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true","x-session-id":a,"x-user-id":r},body:JSON.stringify({title:t,content:o,tags:n})});if(s.ok)alert("Nota actualizada"),await getNotes(),closeModal();else{const e=await s.text();alert(`Ocurrio un error al actualizar la nota: ${e}`)}}catch(e){console.error("Error:",e),alert("Ocurrio un error al actualizar la nota.")}})),document.getElementById("deleteNote").addEventListener("click",(async()=>{const e=document.getElementById("noteId").value,t=localStorage.getItem("sessionId"),o=localStorage.getItem("userId");try{const n=await fetch(`https://enabled-elephant-presently.ngrok-free.app/notes/${e}`,{method:"DELETE",headers:{"ngrok-skip-browser-warning":"true","x-session-id":t,"x-user-id":o}});if(n.ok)alert("Nota eliminada"),await getNotes(),closeModal();else{const e=await n.text();alert(`Ocurrio un error al eliminar la nota: ${e}`)}}catch(e){console.error("Error:",e),alert("Ocurrio un error al eliminar la nota.")}})),document.getElementById("createNote").addEventListener("click",(()=>{openNoteModal({title:"",content:"",tags:"",noteId:""})})),document.getElementById("submitLogin").addEventListener("click",(async()=>{const e=document.getElementById("usernameField").value,t=document.getElementById("passwordField").value;if(e.length>24)alert("El nombre de usuario no puede ser mayor a 24 caracteres");else if(t.length>254)alert("La contrase√±a no puede ser mayor a 254 caracteres");else try{const o=await fetch("https://enabled-elephant-presently.ngrok-free.app/login",{method:"POST",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true"},body:JSON.stringify({username:e,password:t})});if(o.ok){sessionId=o.headers.get("x-session-id"),localStorage.setItem("sessionId",sessionId);const e=await o.json();localStorage.setItem("userId",e.userId),localStorage.setItem("username",e.username),localStorage.setItem("email",e.email),alert("Login successful"),window.location.href="app.html"}else{const e=await o.text();alert(`Login failed: ${e}`)}}catch(e){console.error("Error:",e),alert("An error occurred while logging in")}}));